DATA_SEG SEGMENT
ARR DB 45H,34H,22H,11H,33H,44H,2H,4H,6H,8H
ODD_NO DB 0
EVEN_NO DB 0
DATA_SEG ENDS
CODE_SEG SEGMENT
ASSUME CS:CODE_SEG,DS:DATA_SEG
START : MOV AX,DATA_SEG ;initialize data segment
MOV DS,AX

MOV SI, OFFSET ARR ;initialise the pointer TO START OF ARR
MOV CX,10 ;initialise the counter 10 BECAUSE 10 ITEMS IN ARR
AGAIN: ;LOOP NAME

MOV AL,[SI] ;read the first element
ROR AL,1 ;rotates the LSB to carry flag
JC SKIP ;IF CARRY IS 1 JUMP TO SKIP
INC EVEN_NO ;IF CARRY NOT 1 INCREMENT EVEN COUNT
JMP NEXT ;JUMP TO NEXT TO MATTER WHAT

SKIP:          ;IN AGAIN IF IT GET CARRY AS 1 IT JUMPS HERE

INC ODD_NO   ;INCREMENTS ODD COUNT
INC SI       ;INCREMENT POSSITION OF POINTER IN ARRAY

NEXT:        ;AGAIN JUMPS TO NEXT NO MATTER WHAT

INC SI       ;INCREMENT POSSITION OF POINTER IN ARRAY
LOOP AGAIN   ;SEENDS LOOP BACK TO AGAIN TO CHECK ALL THE NUMBERS

MOV AH,4CH ;exit to DOS
INT 21H
CODE_SEG ENDS
END START